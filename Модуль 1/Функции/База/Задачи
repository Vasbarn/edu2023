Цели практической работы
Научиться:

разбивать программу на функции и выделять блоки, которые могут быть использованы повторно;
передавать значения, объекты в функции через аргументы;
использовать двойное сравнение (chained comparison).

Что входит в работу
Задача 1. Сумма чисел.
Задача 2. Функция в функции.
Задача 3. Апгрейд калькулятора.
Задача 4. Число наоборот.
Задача 5. Текстовый редактор.
Задача 6. НОД.
Задача 7. Недоделка.

Задача 1. Сумма чисел
Что нужно сделать
Напишите функцию summa_n, которая принимает одно целое положительное число N и выводит сумму всех чисел от 1 до N включительно.

Пример работы программы:

Введите число: 5

Я знаю, что сумма чисел от 1 до 5 равна 15

Что оценивается
Результат вывода соответствует условию.
В input содержится корректное приглашение для ввода.
Формат вывода соответствует примеру.
Вывод содержит описание результата (выведенные числа сопровождаются текстовым описанием).

Задача 2. Функция в функции
Что нужно сделать
Евгений проходит специальный тест по программированию. Всё шло хорошо, пока герой не наткнулся на тему «Функции». Задание звучит так:

Основная ветка программы, не считая заголовков функций, состоит из одной строки кода. Это вызов функции test(). В ней запрашивается на ввод целое число. Если оно положительное, то вызывается функция positive(), тело которой содержит команду вывода на экран слова «Положительное». Если число отрицательное, то вызывается функция negative(), её тело содержит выражение вывода на экран слова «Отрицательное».

Помогите Евгению и реализуйте такую программу.

Что оценивается
Результат вывода соответствует условию.
В input содержится корректное приглашение для ввода.
Вывод содержит описание результата (выведенные числа сопровождаются текстовым описанием).

Задача 3. Апгрейд калькулятора
Что нужно сделать
Степан использует калькулятор для расчёта суммы и разности чисел, но на работе ему требуются не только обычные арифметические действия. Он ничего не хочет делать вручную, поэтому решил немного расширить функционал калькулятора.

Напишите программу, запрашивающую у пользователя число и действие, которое нужно сделать с числом: вывести сумму его цифр, максимальную или минимальную цифру. Каждое действие оформите в виде отдельной функции, а основную программу зациклите.

Запрошенные числа должны передаваться в функции суммы, максимума и минимума при помощи аргументов.

Что оценивается
Результат вывода соответствует условию.
В input содержится корректное приглашение для ввода.
Вывод содержит описание результата (выведенные числа сопровождаются текстовым описанием).
Нет обращения к глобальным переменным снаружи функции.
Числа, с которыми должны работать функции, передаются через аргументы.
Советы и рекомендации
Не забывайте, что параметры функции и переменные снаружи могут иметь разные названия.
При необходимости пересмотрите видео по работе с аргументами либо ознакомьтесь с дополнительными источниками информации по этой теме, например с этой статьёй:
Функции и их аргументы в Python 3

Задача 4. Число наоборот
Что нужно сделать
Вводится последовательность чисел, оканчивающаяся нулём. Реализуйте функцию, которая принимает в качестве аргумента каждое число, переворачивает его и выводит на экран.

Пример:

Введите число: 1234
Число наоборот: 4321
Введите число: 1000
Число наоборот: 0001
Введите число: 0
Программа завершена!

Дополнительно: добейтесь такого вывода чисел, в начале которых идут нули.

Пример:

Введите число: 1230
Число наоборот: 321

Ноль, который мы убрали, называется ведущим.

Что оценивается
Результат вывода соответствует условию.
Формат вывода соответствует примеру.
В input содержится корректное приглашение для ввода.
Вывод содержит описание результата (выведенные числа сопровождаются текстовым описанием).

Задача 5. Текстовый редактор
Что нужно сделать
Продолжаем разрабатывать новый текстовый редактор. В этот раз нам поручили написать для него код, который считает, сколько раз в тексте встречается любая выбранная буква или цифра (а не только буквы Ы, как раньше).

Напишите функцию count_letters(), которая принимает на вход текст и подсчитывает, какое в нём количество цифр K и букв N. Функция должна вывести на экран информацию о найденных буквах и цифрах в определённом формате.

Пример:

Введите текст: 100 лет в обед
Какую цифру ищем? 0
Какую букву ищем? Л

Количество цифр 0: 2
Количество букв Л: 1

Что оценивается
Результат вывода соответствует условию.
В input содержится корректное приглашение для ввода.
Формат вывода соответствует примеру.
Вывод содержит описание результата (выведенные числа сопровождаются текстовым описанием).

Задача 6. НОД
Что нужно сделать
Напишите функцию, вычисляющую наибольший общий делитель двух чисел.

Что оценивается
Результат вывода соответствует условию.
В input содержится корректное приглашение для ввода.
Вывод содержит описание результата (выведенные числа сопровождаются текстовым описанием).

Задача 7. Недоделка
Что нужно сделать
Вы пришли на работу в компанию по разработке игр, целевая аудитория — дети и их родители. У предыдущего программиста было задание сделать две игры в одном приложении, чтобы пользователь мог выбирать одну из них. Однако программист, на место которого вы пришли, перед увольнением не успел выполнить эту задачу и оставил только небольшой шаблон проекта. Используя этот шаблон, реализуйте игры «Камень, ножницы, бумага» и «Угадай число».

Правила игры «Камень, ножницы, бумага»: программа запрашивает у пользователя строку и выводит, победил он или проиграл. Камень бьёт ножницы, ножницы режут бумагу, бумага кроет камень.

Правила игры «Угадай число»: программа запрашивает у пользователя число до тех пор, пока он не отгадает загаданное.

def rock_paper_scissors():
  # Здесь будет игра «Камень, ножницы, бумага»

def guess_the_number():
  # Здесь будет игра «Угадай число»

def mainMenu():
  # Здесь главное меню игры

mainMenu():
  pass